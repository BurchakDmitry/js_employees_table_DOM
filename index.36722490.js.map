{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,C,C,E,O,A,S,C,E,G,M,O,C,G,O,C,E,I,A,S,C,C,C,E,I,E,E,E,A,M,E,K,A,a,O,Q,C,C,O,Q,C,E,C,C,a,C,G,A,M,G,I,E,E,C,E,C,E,E,C,E,G,C,I,E,E,I,C,G,C,C,E,A,C,E,E,I,E,E,I,A,I,E,I,C,E,K,E,C,G,E,M,G,G,E,C,G,C,M,E,C,E,C,E,E,C,Q,C,G,C,G,A,M,E,M,E,E,M,E,Q,C,G,E,M,C,C,C,O,E,E,E,I,E,E,I,A,W,M,A,U,6I,G,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,E,I,A,W,M,A,U,wI,G,C,S,E,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,CCuBA,IAAM,EAAe,EAAG,AADV,AADA,SAAS,aAAa,CAAC,SACjB,aAAa,CAAC,SACJ,gBAAgB,CAAC,OACzC,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAW,AAuCjB,SAAiB,CAAS,CAAE,CAAM,EAChC,IAAM,EAAO,SAAS,aAAa,CAAC,QAE/B,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAsB,OAAO,OAAO,CAAC,EAAA,CAAA,OAAA,QAAA,CAAA,GAArC,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,GAAA,A,WAAK,IAAA,EAAA,EAAA,EAAA,KAAA,CAAA,GAAO,EAAA,CAAA,CAAA,EAAA,CAAK,EAAZ,CAAA,CAAA,EAAA,CACG,EAAQ,SAAS,aAAa,CAAC,SAErC,GAAI,AAAU,WAAV,EAAoB,CACtB,IAAM,EAAS,SAAS,aAAa,CAAC,SAEtC,CAAA,EAAM,WAAW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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// #region table parameters\nvar formAtributes = {\n    name: \"Name\",\n    position: \"Position\",\n    office: \"Office\",\n    age: \"Age\",\n    salary: \"Salary\"\n};\nvar citiesSelect = [\n    \"Tokyo\",\n    \"Singapore\",\n    \"London\",\n    \"New York\",\n    \"Edinburgh\",\n    \"San Francisco\"\n];\n// #endregion\nvar table = document.querySelector(\"table\");\nvar thead = table.querySelector(\"thead\");\nvar cellsOfHead = _to_consumable_array(thead.querySelectorAll(\"th\"));\nvar tbody = document.querySelector(\"tbody\");\nvar employee = newForm(formAtributes, citiesSelect);\nvar clicksOnHeadCells = 1;\nvar indexOfHeadCells = null;\nvar indexOfRow = null;\nemployee.classList.add(\"new-employee-form\");\ndocument.body.appendChild(employee);\n// #region creating a notification\nfunction notificationMessage(text, type) {\n    var notification = document.createElement(\"div\");\n    var titleNotification = document.createElement(\"h3\");\n    notification.setAttribute(\"data-qa\", \"notification\");\n    notification.classList.add(\"notification\");\n    titleNotification.classList.add(\"title\");\n    notification.appendChild(titleNotification);\n    notification.classList.add(type);\n    titleNotification.textContent = text;\n    document.body.appendChild(notification);\n    setTimeout(function() {\n        document.body.querySelector(\".notification\").remove();\n    }, 2000);\n}\n// #endregion\n// #region salary formatting\nfunction formatCurrency(numberStr) {\n    var number = parseInt(numberStr, 10);\n    return \"$\" + number.toLocaleString(\"en-US\");\n}\n// #endregion\n// #region creating a form (constructor)\nfunction newForm(atributes, cities) {\n    var form = document.createElement(\"form\");\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        var _loop = function() {\n            var _step_value = _sliced_to_array(_step.value, 2), key = _step_value[0], value = _step_value[1];\n            var label = document.createElement(\"label\");\n            if (value === \"Office\") {\n                var select = document.createElement(\"select\");\n                label.textContent = \"\".concat(value, \":\");\n                select.setAttribute(\"data-qa\", \"\".concat(key));\n                select.name = key;\n                cities.forEach(function(city) {\n                    var option = document.createElement(\"option\");\n                    option.value = city;\n                    option.textContent = city;\n                    select.appendChild(option);\n                });\n                label.appendChild(select);\n                form.appendChild(label);\n            } else {\n                var input = document.createElement(\"input\");\n                label.textContent = \"\".concat(value, \":\");\n                input.setAttribute(\"data-qa\", \"\".concat(key));\n                input.name = \"\".concat(key);\n                input.type = \"text\";\n                input.setAttribute(\"required\", \"\");\n                label.appendChild(input);\n                form.appendChild(label);\n            }\n        };\n        for(var _iterator = Object.entries(atributes)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true)_loop();\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    var button = document.createElement(\"button\");\n    button.textContent = \"Save to table\";\n    button.type = \"submit\";\n    form.appendChild(button);\n    return form;\n}\n// #endregion\n// #region form submit event\nemployee.querySelector(\"button\").addEventListener(\"click\", function(e) {\n    var checkInputParameters = function checkInputParameters(inputs) {\n        var emptyItem = \"\";\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = Object.entries(inputs)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var _step_value = _sliced_to_array(_step.value, 2), key = _step_value[0], value = _step_value[1];\n                if (key === \"position\") {\n                    if (!value.trim()) {\n                        notificationMessage(\"Please indicate your position\", \"error\");\n                        return false;\n                    }\n                }\n                if (!value.trim()) {\n                    emptyItem = \"\".concat(key);\n                    notificationMessage(\"\".concat(emptyItem.toUpperCase(), \" is empty, fill it in\"), \"warning\");\n                    return false;\n                }\n                if (key === \"name\") {\n                    if (value.trim().length < 4) {\n                        notificationMessage(\"Your name is less than 4 characters\", \"error\");\n                        return false;\n                    }\n                }\n                if (key === \"age\") {\n                    if (parseInt(value) < 18 || parseInt(value) > 90) {\n                        notificationMessage(\"Allowed age is between 18 and 90\", \"error\");\n                        return false;\n                    }\n                }\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        return true;\n    };\n    var valuesOfInputs = {\n        name: employee.querySelector('[data-qa=\"name\"]').value,\n        position: employee.querySelector('[data-qa=\"position\"]').value,\n        office: employee.querySelector('[data-qa=\"office\"]').value,\n        age: employee.querySelector('[data-qa=\"age\"]').value,\n        salary: employee.querySelector('[data-qa=\"salary\"]').value\n    };\n    if (checkInputParameters(valuesOfInputs)) {\n        var row = document.createElement(\"tr\");\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = Object.entries(valuesOfInputs)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var _step_value = _sliced_to_array(_step.value, 2), key = _step_value[0], value = _step_value[1];\n                var cell = document.createElement(\"td\");\n                if (key === \"salary\") cell.textContent = formatCurrency(value);\n                else cell.textContent = value;\n                row.appendChild(cell);\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        tbody.appendChild(row);\n        notificationMessage(\"Adding successfully\", \"success\");\n        e.preventDefault();\n        employee.reset();\n    }\n    e.preventDefault();\n});\n// #endregion\n// #region sorting rows\nfunction sortedBodyRows(rows, index, nameOfCell) {\n    if (nameOfCell === \"Age\" || nameOfCell === \"Salary\") rows.sort(function(a, b) {\n        return stringToNumber(a.children[index].textContent) - stringToNumber(b.children[index].textContent);\n    });\n    else rows.sort(function(a, b) {\n        return a.children[index].textContent.localeCompare(b.children[index].textContent);\n    });\n    return rows;\n}\n// #endregion\n// #region formatting a string to a number\nfunction stringToNumber(str) {\n    if (str.includes(\",\")) return parseInt(str.split(\"\").filter(function(el) {\n        return Number.isInteger(parseInt(el));\n    }).join(\"\"));\n    else return parseInt(str);\n}\n// #endregion\n// #region activity class switch\n_to_consumable_array(tbody.querySelectorAll(\"tr\")).forEach(function(row, index) {\n    row.addEventListener(\"click\", function() {\n        if (indexOfRow !== index) _to_consumable_array(tbody.querySelectorAll(\"tr\")).forEach(function(element) {\n            element.classList.remove(\"active\");\n        });\n        indexOfRow = index;\n        row.classList.add(\"active\");\n    });\n});\n// #endregion\n// #region sorting in two directions\ncellsOfHead.forEach(function(cell, index) {\n    cell.addEventListener(\"click\", function() {\n        if (clicksOnHeadCells % 2 === 0 && indexOfHeadCells === index) {\n            sortedBodyRows(_to_consumable_array(tbody.querySelectorAll(\"tr\")), index, cell.textContent).reverse().forEach(function(row) {\n                tbody.appendChild(row);\n            });\n            clicksOnHeadCells--;\n        } else {\n            sortedBodyRows(_to_consumable_array(tbody.querySelectorAll(\"tr\")), index, cell.textContent).forEach(function(row) {\n                tbody.appendChild(row);\n            });\n            clicksOnHeadCells++;\n        }\n        indexOfHeadCells = index;\n    });\n}); // #endregion\n\n//# sourceMappingURL=index.36722490.js.map\n","'use strict';\n// #region table parameters\n\nconst formAtributes = {\n  name: 'Name',\n  position: 'Position',\n  office: 'Office',\n  age: 'Age',\n  salary: 'Salary',\n};\n\nconst citiesSelect = [\n  'Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinburgh',\n  'San Francisco',\n];\n\n// #endregion\nconst table = document.querySelector('table');\nconst thead = table.querySelector('thead');\nconst cellsOfHead = [...thead.querySelectorAll('th')];\nconst tbody = document.querySelector('tbody');\nconst employee = newForm(formAtributes, citiesSelect);\nlet clicksOnHeadCells = 1;\nlet indexOfHeadCells = null;\nlet indexOfRow = null;\n\nemployee.classList.add('new-employee-form');\ndocument.body.appendChild(employee);\n\n// #region creating a notification\nfunction notificationMessage(text, type) {\n  const notification = document.createElement('div');\n  const titleNotification = document.createElement('h3');\n\n  notification.setAttribute('data-qa', 'notification');\n  notification.classList.add('notification');\n  titleNotification.classList.add('title');\n\n  notification.appendChild(titleNotification);\n\n  notification.classList.add(type);\n  titleNotification.textContent = text;\n\n  document.body.appendChild(notification);\n\n  setTimeout(() => {\n    document.body.querySelector('.notification').remove();\n  }, 2000);\n}\n// #endregion\n\n// #region salary formatting\nfunction formatCurrency(numberStr) {\n  const number = parseInt(numberStr, 10);\n\n  return '$' + number.toLocaleString('en-US');\n}\n// #endregion\n\n// #region creating a form (constructor)\nfunction newForm(atributes, cities) {\n  const form = document.createElement('form');\n\n  for (const [key, value] of Object.entries(atributes)) {\n    const label = document.createElement('label');\n\n    if (value === 'Office') {\n      const select = document.createElement('select');\n\n      label.textContent = `${value}:`;\n      select.setAttribute('data-qa', `${key}`);\n      select.name = key;\n\n      cities.forEach((city) => {\n        const option = document.createElement('option');\n\n        option.value = city;\n        option.textContent = city;\n\n        select.appendChild(option);\n      });\n\n      label.appendChild(select);\n      form.appendChild(label);\n    } else {\n      const input = document.createElement('input');\n\n      label.textContent = `${value}:`;\n      input.setAttribute('data-qa', `${key}`);\n      input.name = `${key}`;\n      input.type = 'text';\n      input.setAttribute('required', '');\n\n      label.appendChild(input);\n      form.appendChild(label);\n    }\n  }\n\n  const button = document.createElement('button');\n\n  button.textContent = 'Save to table';\n  button.type = 'submit';\n\n  form.appendChild(button);\n\n  return form;\n}\n\n// #endregion\n\n// #region form submit event\nemployee.querySelector('button').addEventListener('click', (e) => {\n  const valuesOfInputs = {\n    name: employee.querySelector('[data-qa=\"name\"]').value,\n    position: employee.querySelector('[data-qa=\"position\"]').value,\n    office: employee.querySelector('[data-qa=\"office\"]').value,\n    age: employee.querySelector('[data-qa=\"age\"]').value,\n    salary: employee.querySelector('[data-qa=\"salary\"]').value,\n  };\n\n  function checkInputParameters(inputs) {\n    let emptyItem = '';\n\n    for (const [key, value] of Object.entries(inputs)) {\n      if (key === 'position') {\n        if (!value.trim()) {\n          notificationMessage('Please indicate your position', 'error');\n\n          return false;\n        }\n      }\n\n      if (!value.trim()) {\n        emptyItem = `${key}`;\n\n        notificationMessage(\n          `${emptyItem.toUpperCase()} is empty, fill it in`,\n          'warning',\n        );\n\n        return false;\n      }\n\n      if (key === 'name') {\n        if (value.trim().length < 4) {\n          notificationMessage('Your name is less than 4 characters', 'error');\n\n          return false;\n        }\n      }\n\n      if (key === 'age') {\n        if (parseInt(value) < 18 || parseInt(value) > 90) {\n          notificationMessage('Allowed age is between 18 and 90', 'error');\n\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  if (checkInputParameters(valuesOfInputs)) {\n    const row = document.createElement('tr');\n\n    for (const [key, value] of Object.entries(valuesOfInputs)) {\n      const cell = document.createElement('td');\n\n      if (key === 'salary') {\n        cell.textContent = formatCurrency(value);\n      } else {\n        cell.textContent = value;\n      }\n\n      row.appendChild(cell);\n    }\n\n    tbody.appendChild(row);\n\n    notificationMessage('Adding successfully', 'success');\n\n    e.preventDefault();\n\n    employee.reset();\n  }\n\n  e.preventDefault();\n});\n// #endregion\n\n// #region sorting rows\nfunction sortedBodyRows(rows, index, nameOfCell) {\n  if (nameOfCell === 'Age' || nameOfCell === 'Salary') {\n    rows.sort(\n      (a, b) =>\n        stringToNumber(a.children[index].textContent) -\n        stringToNumber(b.children[index].textContent),\n    );\n  } else {\n    rows.sort((a, b) => {\n      return a.children[index].textContent.localeCompare(\n        b.children[index].textContent,\n      );\n    });\n  }\n\n  return rows;\n}\n\n// #endregion\n\n// #region formatting a string to a number\nfunction stringToNumber(str) {\n  if (str.includes(',')) {\n    return parseInt(\n      str\n        .split('')\n        .filter((el) => Number.isInteger(parseInt(el)))\n        .join(''),\n    );\n  } else {\n    return parseInt(str);\n  }\n}\n// #endregion\n\n// #region activity class switch\n[...tbody.querySelectorAll('tr')].forEach((row, index) => {\n  row.addEventListener('click', () => {\n    if (indexOfRow !== index) {\n      [...tbody.querySelectorAll('tr')].forEach((element) => {\n        element.classList.remove('active');\n      });\n    }\n    indexOfRow = index;\n\n    row.classList.add('active');\n  });\n});\n// #endregion\n\n// #region sorting in two directions\ncellsOfHead.forEach((cell, index) => {\n  cell.addEventListener('click', () => {\n    if (clicksOnHeadCells % 2 === 0 && indexOfHeadCells === index) {\n      sortedBodyRows([...tbody.querySelectorAll('tr')], index, cell.textContent)\n        .reverse()\n        .forEach((row) => {\n          tbody.appendChild(row);\n        });\n\n      clicksOnHeadCells--;\n    } else {\n      sortedBodyRows(\n        [...tbody.querySelectorAll('tr')],\n        index,\n        cell.textContent,\n      ).forEach((row) => {\n        tbody.appendChild(row);\n      });\n\n      clicksOnHeadCells++;\n    }\n\n    indexOfHeadCells = index;\n  });\n});\n// #endregion\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_sliced_to_array","_array_with_holes","isArray","_iterable_to_array_limit","_s","_e","_i","Symbol","iterator","_arr","_n","_d","call","next","done","push","value","err","_unsupported_iterable_to_array","_non_iterable_rest","TypeError","_to_consumable_array","_array_without_holes","_iterable_to_array","iter","from","_non_iterable_spread","o","minLen","n","Object","prototype","toString","slice","constructor","name","test","cellsOfHead","thead","table","document","querySelector","querySelectorAll","tbody","employee","newForm","atributes","cities","form","createElement","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","_loop","_step_value","key","label","select","textContent","concat","setAttribute","forEach","city","option","appendChild","input","type","return","button","position","office","age","salary","clicksOnHeadCells","indexOfHeadCells","indexOfRow","notificationMessage","text","notification","titleNotification","classList","add","body","setTimeout","remove","sortedBodyRows","rows","index","nameOfCell","sort","a","b","stringToNumber","children","localeCompare","str","includes","parseInt","split","filter","el","Number","isInteger","join","addEventListener","e","valuesOfInputs","checkInputParameters","inputs","emptyItem","trim","toUpperCase","row","cell","number","toLocaleString","preventDefault","reset","element","reverse"],"version":3,"file":"index.36722490.js.map"}